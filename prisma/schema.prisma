generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        String   @id @default(cuid())
  clerkId   String   @unique
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  resumes   Resume[]
  
  @@map("users")
}

model Resume {
  id           String   @id @default(cuid())
  userId       String
  fileName     String
  fileSize     Int
  fileType     String
  uploadedAt   DateTime @default(now())
  parsedData   Json?
  
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  sections     Section[]
  
  @@map("resumes")
}

model Section {
  id          String      @id @default(cuid())
  resumeId    String
  type        SectionType
  data        Json
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  resume      Resume      @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  
  @@map("sections")
}

enum SectionType {
  PROFILE
  EXPERIENCE
  EDUCATION
  SKILLS
}
